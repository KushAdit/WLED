/*
 * More web UI HTML source arrays.
 * This file is auto generated, please don't make any changes manually.
 * Instead, see https://github.com/Aircoookie/WLED/wiki/Add-own-functionality#changing-web-ui
 * to find out how to easily modify the web UI source!
 */

// Autogenerated from wled00/data/style.css, do not edit!!
const char PAGE_settingsCss[] PROGMEM = R"=====(<style>body{font-family:Verdana,sans-serif;text-align:center;background:#222;color:#fff;line-height:200%;margin:0}hr{border-color:#666}button{background:#1fa3ec;color:#fff;font-family:Verdana,sans-serif;border:0;border-radius:.3rem;line-height:2.4rem;font-size:1.2rem;width:340px;margin:20px;margin-top:12px}button:hover{background:#0e70a4}.bred{background:#d43535}.bred:hover{background:#931f1f}.bgrn{background:#47c266}.bgrn:hover{background:#4b945c}button.disabled,button[disabled]{color:#aaa}.helpB{text-align:left;position:absolute;width:60px}input{text-align:center;font-size:1rem;border-radius:.3rem;border:4px ridge #1fa3ec;background:#4b4a4a;color:#fff}input[type=number]{width:4em}select{text-align:center;font-size:1rem;border-radius:.3rem;border:4px ridge #47c266;background:#4b4a4a;color:#fff}td{padding:0}.d5{width:5em!important}.smaller{width:60px}</style>)=====";


// Autogenerated from wled00/data/settings.htm, do not edit!!
const char PAGE_settings[] PROGMEM = R"=====(<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><title>WLED Settings
</title><style>
body{text-align:center;background:#222;height:100px;margin:0}html{--h:10.45vh}button{background:#1fa3ec;color:#fff;font-family:Verdana,sans-serif;border:0;border-radius:.3rem;line-height:2.4rem;font-size:1.2rem;width:340px;margin:20px;margin-top:12px}button:hover{background:#0e70a4}.bred{background:#d43535}.bred:hover{background:#931f1f}.bgrn{background:#47c266}.bgrn:hover{background:#4b945c}
</style><script>
function BB(){window.frameElement&&(document.getElementById("b").style.display="none",document.documentElement.style.setProperty("--h","13.86vh"))}
</script></head><body onload="BB()"><form action="/settings/wifi"><button 
type="submit" class="bgrn">WiFi Settings</button></form><form 
action="/settings/leds"><button type="submit" class="bgrn">LED Preferences
</button></form><form action="/settings/sound"><button type="submit" 
class="bgrn">Sound Settings</button></form><form action="/settings/sync"><button
 type="submit" class="bgrn">Sync Settings</button></form><form 
action="/settings/sec"><button type="submit" class="bred">Factory Reset</button>
</form><form action="/"><button type="submit" id="b">Back</button></form></body>
</html>)=====";


// Autogenerated from wled00/data/settings_wifi.htm, do not edit!!
const char PAGE_settings_wifi[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta charset="utf-8"><meta name="viewport" 
content="width=500"><title>WiFi Settings</title><script>
function B(){window.open("/settings","_self")}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="GetV()"><div 
style="text-align:left;display:inline-block;color:#eaeaea;min-width:340px"><form
 id="form_s" name="Sf" method="post"><button type="button" onclick="B()">Back
</button><br><button type="submit" class="bgrn">Save & Connect</button><hr><hr>
<h1 style="text-align:center;color:#e8ec1f">HOTSPOT SETTINGS</h1><table><tr><td 
style="width:220px"><b>lIGHT Hotspot Name :</b></td><td><input class="smaller" 
name="AS" maxlength="32"></td></tr><tr><td style="width:220px"><b>Hide Network :
</b></td><td><input type="checkbox" name="AH"></td></tr><tr><td 
style="width:220px"><b>Password :</b></td><td><input type="password" name="AP" 
class="smaller" maxlength="63"><tr><td style="width:220px"><b>WiFi channel :</b>
</td><td><input name="AC" type="number" min="1" max="13" required></td></tr>
</td></tr></table><br><table>Hotspot opens when : <select name="AB"><option 
value="0">No connection after boot</option><option value="1">Disconnected
</option><option value="2">Always</option><option value="3">
Never (not recommended)</option></select><br>Hotspot IP: <span class="sip">
Not active</span><br><br><hr><h2 style="text-align:center;color:#ff7b00">
Connect to Home WIFI Network</h2><table><tr><td style="width:156px"><b>
WIFI Name :</b></td><td><input name="CS" maxlength="32"></td></tr><tr><td 
style="width:156px"><b>Password :</b></td><td><input type="password" name="CP" 
maxlength="63"></td></tr></table><br><h3>Advanced</h3>
Static IP (leave at 0.0.0.0 for DHCP):<br><input name="I0" type="number" 
min="0" max="255" required> . <input name="I1" type="number" min="0" max="255" 
required> . <input name="I2" type="number" min="0" max="255" required> . <input 
name="I3" type="number" min="0" max="255" required><br>Static gateway:<br><input
 name="G0" type="number" min="0" max="255" required> . <input name="G1" 
type="number" min="0" max="255" required> . <input name="G2" type="number" 
min="0" max="255" required> . <input name="G3" type="number" min="0" max="255" 
required><br>Static subnet mask:<br><input name="S0" type="number" min="0" 
max="255" required> . <input name="S1" type="number" min="0" max="255" required>
 . <input name="S2" type="number" min="0" max="255" required> . <input 
name="S3" type="number" min="0" max="255" required><br>
mDNS address (leave empty for no mDNS):<br>http:// <input name="CM" 
maxlength="32"> .local<br>Client IP: <span class="sip">Not connected</span><br>
<hr><h3 style="text-align:center;color:#09ff00">
In Case Of Frequent Connection Loss</h3><table><tr><td style="width:220px"><b>
Disable WiFi sleep :</b></td><td><input type="checkbox" name="WS"></td></tr>
</table><i>Can help with connectivity issues.<br>
Do not enable if WiFi works correctly,<br>increases power consumption.</i><hr>
<hr><button type="button" onclick="B()">Back</button><br><button type="submit" 
class="bgrn">Save & Connect</button></table></form></div></body></html>)=====";


// Autogenerated from wled00/data/settings_leds.htm, do not edit!!
const char PAGE_settings_leds[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta charset="utf-8"><meta name="viewport" 
content="width=500"><title>LED Settings</title><script>
var d=document,laprev=55;function B(){window.open("/settings","_self")}function S(){GetV(),setABL()}function enABL(){var e=d.getElementById("able").checked;d.Sf.LA.value=e?laprev:0,d.getElementById("abl").style.display=e?"inline":"none",d.getElementById("psu2").style.display="none",d.Sf.LA.value>0&&setABL()}function enLA(){var e=d.Sf.LAsel.value;d.Sf.LA.value=e,d.getElementById("LAdis").style.display=50==e?"inline":"none",UI()}function setABL(){switch(d.getElementById("able").checked=!0,d.Sf.LAsel.value=50,parseInt(d.Sf.LA.value)){case 0:d.getElementById("able").checked=!1,enABL();break;case 30:d.Sf.LAsel.value=30;break;case 35:d.Sf.LAsel.value=35;break;case 55:d.Sf.LAsel.value=55;break;case 255:d.Sf.LAsel.value=255;break;default:d.getElementById("LAdis").style.display="inline"}UI()}function UI(){var e=d.querySelectorAll(".wc"),l=e.length;for(i=0;i<l;i++)e[i].style.display=d.getElementById("rgbw").checked?"inline":"none";255==d.Sf.LA.value?laprev=12:d.Sf.LA.value>0&&(laprev=d.Sf.LA.value);var t=Math.ceil((100+d.Sf.LC.value*laprev)/500)/2;t=t>5?Math.ceil(t):t;var n="",a=30==d.Sf.LAsel.value,s=255==d.Sf.LAsel.value;t<1.02&&!a&&!s?n="ESP 5V pin with 1A USB supply":(n+=a?"12V ":s?"WS2815 12V ":"5V ",n+=t,n+="A supply connected to LEDs");var u=Math.ceil((100+d.Sf.LC.value*laprev)/1500)/2,c="(for most effects, ~";c+=u=u>5?Math.ceil(u):u,c+="A is enough)<br>",d.getElementById("psu").innerHTML=n,d.getElementById("psu2").innerHTML=s?"":c;parseInt(d.Sf.LC.value,10);d.getElementById("submitButton").disabled=!1,d.getElementById("submitButton2").disabled=!1}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><div 
style="text-align:left;display:inline-block;color:#eaeaea;min-width:340px"><form
 id="form_s" name="Sf" method="post"><button type="button" onclick="B()">Back
</button><br><button type="submit" class="bgrn">Save</button><hr><hr><h1 
style="text-align:center;color:#e8ec1f">ON STARTUP</h1><table><tr><td 
style="width:220px"><b>Turn LEDs on:</b></td><td><input type="checkbox" 
name="BO"></td></tr><tr><td style="width:220px"><b>Default brightness (0-255):
</b></td><td><input name="CA" type="number" min="0" max="255" required></td>
</tr></table><br><table><tr><td style="width:220px"><b>Apply preset:</b></td>
<td><input name="BP" type="number" min="0" max="250" required></td></tr><tr><td>
OR</td></tr><tr><td style="width:220px"><b>Cycle presets:</b></td><td><input 
type="checkbox" name="PC"></td></tr></table><br><hr><h1 
style="text-align:center;color:#ff5e00">Configuration</h1><table><tr><td 
style="width:220px"><b>LED count:</b></td><td><input name="LC" type="number" 
min="1" max="1500" oninput="UI()" required></td></tr><tr><td 
style="width:220px"><b>Reverse Direction:</b></td><td><input type="checkbox" 
name="RV"></td></tr><tr><td style="width:220px"><b>Limit Power:</b></td><td>
<input type="checkbox" name="ABen" onchange="enABL()" id="able"></td></tr><tr 
id="abl"><td style="width:220px"><b>Maximum Current (mA):</b></td><td><input 
name="MA" type="number" min="250" max="65000" oninput="UI()" required></td></tr>
</table><br><hr><h1 style="text-align:center;color:#09ff00">Timer Config</h1>
<table><tr><td style="width:220px"><b>Time Period (min):</b></td><td><input 
name="TL" type="number" min="1" max="255" required></td></tr><tr><td 
style="width:220px"><b>Target Brightness (0-255):</b></td><td><input name="TB" 
type="number" min="0" max="255" required></td></tr><tr><td style="width:220px">
<b>Mode:</b></td><td><select name="TW"><option value="0">Wait and set</option>
<option value="1">Fade</option><option value="2">Fade Color</option><option 
value="3">Sunrise</option></select></td></tr></table><hr><hr><span class="pow" 
hidden></span> <select name="LAsel" onchange="enLA()" hidden><option value="55" 
selected="selected">5V default (55mA)</option><option value="35">
5V efficient (35mA)</option><option value="30">12V (30mA)</option><option 
value="255">WS2815 (12mA)</option><option value="50">Custom</option></select> 
<span id="LAdis" hidden><input name="LA" id="la" hidden></span><span id="psu" 
hidden></span> <span id="psu2" hidden></span> <input name="LCW" hidden> <input 
name="LCH" hidden> <input hidden name="LCWHS"> <input type="checkbox" name="EW" 
onchange="UI()" id="rgbw" hidden> <span class="wc"><select name="AW"><option 
value="0">None</option><option value="1">Brighter</option><option value="2">
Accurate</option><option value="3">Dual</option><option value="4">Legacy
</option></select></span><select name="CO" hidden><option value="0">GRB</option>
<option value="1">RGB</option><option value="2">BRG</option><option value="3">
RBG</option><option value="4">BGR</option><option value="5">GBR</option>
</select> <input type="checkbox" name="GC" hidden> <input type="checkbox" 
name="GB" hidden> <input name="BF" hidden> <input hidden name="TF"> <input 
name="TD" hidden> <input hidden name="PF"> <select name="PB" hidden><option 
value="0">Linear (wrap if moving)</option><option value="1">Linear (always wrap)
</option><option value="2">Linear (never wrap)</option><option value="3">
None (not recommended)</option></select> <input hidden name="SL"> <button 
type="button" onclick="B()">Back</button><br><button type="submit" class="bgrn">
Save</button></form></div></body></html>)=====";


// Autogenerated from wled00/data/settings_sound.htm, do not edit!!
const char PAGE_settings_sound[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta charset="utf-8"><meta name="viewport" 
content="width=500"><title>Sound Settings</title><script>
var d=document;function B(){window.open("/settings","_self")}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="GetV()">
<div style="text-align:left;display:inline-block;color:#eaeaea;min-width:340px">
<form id="form_s" name="Sf" method="post"><button type="button" onclick="B()">
Back</button><br><button type="submit" class="bgrn">Save</button><hr><hr><h1 
style="text-align:center;color:#e8ec1f">Sound Settings</h1><table><tr><td 
style="width:220px"><b>Noise Threshold :</b></td><td><input name="SQ" 
type="number" min="0" max="255" required></td></tr><tr><td style="width:220px">
<b>Gain Multiplier :</b></td><td><input name="GN" type="number" min="0" 
max="255" required></td></tr></table><br><table><hr><hr><button type="button" 
onclick="B()">Back</button><br><button type="submit" class="bgrn">Save</button>
</table></form></div></body></html>)=====";


#ifdef WLED_ENABLE_DMX

// Autogenerated from wled00/data/settings_dmx.htm, do not edit!!
const char PAGE_settings_dmx[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta name="viewport" content="width=500"><meta 
charset="utf-8"><title>DMX Settings</title><script>
function GCH(n){for(d=document,d.getElementById("dmxchannels").innerHTML+="",i=0;i<n;i++)d.getElementById("dmxchannels").innerHTML+="<span id=CH"+(i+1)+"s >Channel "+(i+1)+": <select name=CH"+(i+1)+' id="CH'+(i+1)+'"><option value=0>Set to 0</option><option value=1>Red</option><option value=2>Green</option><option value=3>Blue</option><option value=4>White</option><option value=5>Shutter (Brightness)</option><option value=6>Set to 255</option></select></span><br />\n'}function mMap(){for(d=document,numCh=document.Sf.CN.value,numGap=document.Sf.CG.value,parseInt(numCh)>parseInt(numGap)?d.getElementById("gapwarning").style.display="block":d.getElementById("gapwarning").style.display="none",i=0;i<15;i++)i>=numCh?(d.getElementById("CH"+(i+1)+"s").style.opacity="0.5",d.getElementById("CH"+(i+1)).disabled=!0):(d.getElementById("CH"+(i+1)+"s").style.opacity="1",d.getElementById("CH"+(i+1)).disabled=!1)}function S(){GCH(15),GetV(),mMap()}function H(){window.open("https://github.com/atuline/WLED/wiki/DMX")}function B(){window.history.back()}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div class="helpB"><button type="button" 
onclick="H()">?</button></div><button type="button" onclick="B()">Back</button>
<button type="submit">Save</button><hr><h2>
Imma firin ma lazer (if it has DMX support)</h2>Proxy Universe <input name="PU" 
type="number" min="0" max="63999" required> from E1.31 to DMX (0=disabled)<br>
<i>This will disable the LED data output to DMX configurable below</i><br><br>
<i>Number of fixtures is taken from LED config page</i><br>
Channels per fixture (15 max): <input type="number" min="1" max="15" name="CN" 
maxlength="2" onchange="mMap()"><br>Start channel: <input type="number" min="1" 
max="512" name="CS" maxlength="2"><br>Spacing between start channels: <input 
type="number" min="1" max="512" name="CG" maxlength="2" onchange="mMap()"> [ <a 
href="javascript:alert('if set to 10, first fixture will start at 10,\nsecond will start at 20 etc.\nRegardless of the channel count.\nMakes memorizing channel numbers easier.');">
info</a> ]<br><div id="gapwarning" style="color:orange;display:none">
WARNING: Channel gap is lower than channels per fixture.<br>
This will cause overlap.</div><button type="button" 
onclick='location.href="/dmxmap"'>DMX Map</button><br>DMX fixtures start LED: 
<input type="number" min="0" max="1500" name="SL"><h3>Channel functions</h3><div
 id="dmxchannels"></div><hr><button type="button" onclick="B()">Back</button>
<button type="submit">Save</button></form></body></html>)=====";


#else
const char PAGE_settings_dmx[] PROGMEM = R"=====()=====";
#endif

// Autogenerated from wled00/data/settings_ui.htm, do not edit!!
const char PAGE_settings_ui[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta charset="utf-8"><meta name="viewport" 
content="width=500"><title>UI Settings</title><script>
var initial_ds,initial_st,d=document,sett=null,l={comp:{labels:"Show button labels",colors:{LABEL:"Color selection methods",picker:"Color Wheel",rgb:"RGB sliders",quick:"Quick color selectors",hex:"HEX color input"},pcmbot:"Show bottom tab bar in PC mode",pid:"Show preset IDs"},theme:{alpha:{bg:"Background opacity",tab:"Button opacity"},bg:{url:"BG image URL"},color:{bg:"BG HEX color"}}};function gId(e){return d.getElementById(e)}function isObject(e){return e&&"object"==typeof e&&!Array.isArray(e)}function set(e,i,t){for(var n=i,l=e.split("_"),s=l.length,o=0;o<s-1;o++){var a=l[o];n[a]||(n[a]={}),n=n[a]}n[l[s-1]]=t}function addRec(e,t="",n=null){var l="";for(i in e){var s=t+(t?"_":"")+i;if(isObject(e[i]))n&&n[i]&&n[i].LABEL&&(l+=`<h3>${n[i].LABEL}</h3>`),l+=addRec(e[i],s,n?n[i]:null);else{var o=s;if(n&&n[i]?o=n[i]:e[i+"LABEL"]&&(o=e[i+"LABEL"]),i.indexOf("LABEL")>0)continue;var a=typeof e[i];gId(s)?("boolean"===a?gId(s).checked=e[i]:gId(s).value=e[i],gId(s).previousElementSibling.matches(".l")&&(gId(s).previousElementSibling.innerHTML=o)):"boolean"===a?l+=`${o}: <input class="agi cb" type="checkbox" id=${s} ${e[i]?"checked":""}><br>`:"number"===a?l+=`${o}: <input class="agi" type="number" id=${s} value=${e[i]}><br>`:"string"===a&&(l+=`${o}:<br><input class="agi" id=${s} value=${e[i]}><br>`)}}return l}function genForm(e){var i;i=addRec(e,"",l),gId("gen").innerHTML=i}function GetLS(){(sett=localStorage.getItem("wledUiCfg"))||(gId("lserr").style.display="inline");try{sett=JSON.parse(sett)}catch(e){sett={},gId("lserr").style.display="inline",gId("lserr").innerHTML="&#9888; Settings JSON parsing failed. ("+e+")"}genForm(sett),gId("dm").checked="light"===gId("theme_base").value}function SetLS(){for(var e=d.querySelectorAll(".agi"),i=0;i<e.length;i++){var t=e[i],n=t.classList.contains("cb")?t.checked:t.value;set(t.id,sett,n),console.log(`${t.id} set to ${n}`)}try{localStorage.setItem("wledUiCfg",JSON.stringify(sett)),gId("lssuc").style.display="inline"}catch(t){gId("lssuc").style.display="none",gId("lserr").style.display="inline",gId("lserr").innerHTML="&#9888; Settings JSON saving failed. ("+t+")"}}function Save(){SetLS(),d.Sf.DS.value==initial_ds&&d.Sf.ST.checked==initial_st||d.Sf.submit()}function S(){GetV(),initial_ds=d.Sf.DS.value,initial_st=d.Sf.ST.checked,GetLS()}function H(){window.open("https://github.com/atuline/WLED/wiki/Settings#user-interface-settings")}function B(){window.open("/settings","_self")}function UI(){gId("idonthateyou").style.display=gId("dm").checked?"inline":"none";var e=gId("theme_base");e&&(e.value=gId("dm").checked?"light":"dark")}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post"><div 
style="position:sticky;top:0;background-color:#222"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Back</button><button type="button" onclick="Save()">Save</button><br><span 
id="lssuc" style="color:green;display:none">&#10004; Local UI settings saved!
</span> <span id="lserr" style="color:red;display:none">
&#9888; Could not access local storage. Make sure it is enabled in your browser.
</span><hr></div><h2>Web Setup</h2>Server description: <input name="DS" 
maxlength="32"><br>Sync button toggles both send and receive: <input 
type="checkbox" name="ST"><br><i>
The following UI customization settings are unique both to the WLED device and this browser.
<br>
You will need to set them again if using a different browser, device or WLED IP address.
<br>Refresh the main UI to apply changes.</i><br><div id="gen">
Loading settings...</div><h3>UI Appearance</h3><span class="l"></span>: <input 
type="checkbox" id="comp_labels" class="agi cb"><br><span class="l"></span>: 
<input type="checkbox" id="comp_pcmbot" class="agi cb"><br><span class="l">
</span>: <input type="checkbox" id="comp_pid" class="agi cb"><br>
I hate dark mode: <input type="checkbox" id="dm" onchange="UI()"><br><span 
id="idonthateyou" style="display:none"><i>Why would you? </i>&#x1F97A;<br>
</span><span class="l"></span>: <input type="number" min="0.0" max="1.0" 
step="0.01" id="theme_alpha_tab" class="agi"><br><span class="l"></span>: <input
 type="number" min="0.0" max="1.0" step="0.01" id="theme_alpha_bg" class="agi">
<br><span class="l"></span>: <input id="theme_color_bg" maxlength="9" 
class="agi"><br><span class="l">BG image URL</span>: <input id="theme_bg_url" 
class="agi" oninput="checkRandomBg()"><br><span class="l">Random BG image</span>
: <input type="checkbox" id="theme_bg_random" class="agi cb" 
onchange="setRandomBg()"><br><input id="theme_base" class="agi" 
style="display:none"><hr><button type="button" onclick="B()">Back</button>
<button type="button" onclick="Save()">Save</button></form></body></html>)=====";


// Autogenerated from wled00/data/settings_sync.htm, do not edit!!
const char PAGE_settings_sync[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta name="viewport" content="width=500"><meta 
charset="utf-8"><title>Sync Settings</title><script>
var d=document;function B(){window.open("/settings","_self")}function adj(){6454==d.Sf.DI.value?(1==d.Sf.DA.value&&(d.Sf.DA.value=0),1==d.Sf.EU.value&&(d.Sf.EU.value=0)):5568==d.Sf.DI.value&&(0==d.Sf.DA.value&&(d.Sf.DA.value=1),0==d.Sf.EU.value&&(d.Sf.EU.value=1))}function SP(){var e=d.Sf.DI.value;d.getElementById("xp").style.display=e>0?"none":"block",e>0&&(d.Sf.EP.value=e)}function SetVal(){switch(parseInt(d.Sf.EP.value)){case 5568:d.Sf.DI.value=5568;break;case 6454:d.Sf.DI.value=6454;break;case 4048:d.Sf.DI.value=4048}SP()}function S(){GetV(),SetVal()}function GetV() {
%CSS%%SCSS%</head><body onload="S()"><div 
style="text-align:left;display:inline-block;color:#eaeaea;min-width:340px"><form
 id="form_s" name="Sf" method="post"><button type="button" onclick="B()">Back
</button><br><button type="submit" class="bgrn">Save</button><hr><hr><h1 
style="text-align:center;color:#ff002b">NOTE</h1><b style="margin:50px">
All these are Advanced settings</b><br><b style="margin:50px">
and apply only when lIGHT is</b><br><b style="margin:50px">
connected to a Home WIFI network.</b><br><b style="margin:50px">
Otherwise, of no use.</b><br><hr><h1 style="text-align:center;color:#e8ec1f">
Audio Sync</h1><table><tr><td style="width:220px"><b>Mode :</b></td><td><select 
name="ASE"><option value="0">Disabled</option><option value="1">Transmit
</option><option value="2">Receive</option></select></td></tr><tr><td 
style="width:220px"><b>Port :</b></td><td><input name="ASP" type="number" 
min="1" max="65535" class="d5"></td></tr></table><br><i>
Reboot required for changes to take effect.</i><hr><h2 
style="text-align:center;color:#ff7b00">Alexa Voise Assistant Support</h2>
<table><tr><td style="width:220px"><b>Enable discovery by Alexa :</b></td><td>
<input type="checkbox" name="AL"></td></tr><tr><td style="width:220px"><b>
Alexa invocation name :</b></td><td><input name="AI" maxlength="32" class="d5">
</td></tr></table><br><hr><h2 style="text-align:center;color:#09ff00">
LED lIGHT Broadcast</h2><table><tr><td style="width:220px"><b>UDP Port :</b>
</td><td><input name="UP" type="number" min="1" max="65535" class="d5" required>
</td></tr><tr><td style="width:220px"><b>2nd Port :</b></td><td><input 
name="U2" type="number" min="1" max="65535" class="d5" required></td></tr><tr>
<td style="width:220px"><b>Receive :</b></td></tr><tr><td style="width:180px"><b
 style="margin:40px">Brightness :</b></td><td><input type="checkbox" name="RB">
</td></tr><tr><td style="width:180px"><b style="margin:40px">Color :</b></td>
<td><input type="checkbox" name="RC"></td></tr><tr><td style="width:180px"><b 
style="margin:40px">Effects :</b></td><td><input type="checkbox" name="RX"></td>
</tr><tr><td style="width:220px"><b>Send notifications on direct change :</b>
</td><td><input type="checkbox" name="SD"></td></tr><tr><td style="width:220px">
<b>Send Alexa notifications :</b></td><td><input type="checkbox" name="SA"></td>
</tr><tr><td style="width:220px"><b>Receive UDP realtime :</b></td><td><input 
type="checkbox" name="RD"></td></tr></table><br><input hidden name="SB"> <input 
name="SH" hidden> <input hidden name="SM"> <input hidden name="S2"> <i>
Reboot required for changes to take effect.</i><hr><input hidden name="BT"> 
<select name="IR" hidden></select> <select name="DI" hidden></select><div 
id="xp"><input name="EP" hidden></div><input hidden name="EM"> <input name="EU" 
hidden> <input hidden name="ES"> <input name="DA" hidden> <select name="DM" 
hidden></select> <input name="ET" hidden> <input hidden name="FB"> <input 
hidden name="RG"> <input name="WO" hidden> <input name="BK" hidden><h1 
style="text-align:center;color:#ff00ea">MQTT</h1><table><tr><td 
style="width:220px"><b>Enable MQTT :</b></td><td><input type="checkbox" 
name="MQ"></td></tr><tr><td style="width:220px"><b>Broker :</b></td><td><input 
name="MS" maxlength="32" class="d5"></td></tr><tr><td style="width:220px"><b>
Port :</b></td><td><input name="MQPORT" type="number" min="1" max="65535" 
class="d5"></td></tr><tr><td style="width:220px"><b>Username :</b></td><td>
<input name="MQUSER" maxlength="40" class="d5"></td></tr><tr><td 
style="width:220px"><b>Password :</b></td><td><input type="password" input 
name="MQPASS" maxlength="40" class="d5"></td></tr><tr><td style="width:220px">
<b>Client ID :</b></td><td><input name="MQCID" maxlength="40" class="d5"></td>
</tr><tr><td style="width:220px"><b>Device Topic :</b></td><td><input name="MD" 
maxlength="32" class="d5"></td></tr><tr><td style="width:220px"><b>Group Topic :
</b></td><td><input name="MG" maxlength="32" class="d5"></td></tr></table><br>
<i>Reboot required for changes to take effect.</i> <input name="HL" hidden>
<input name="HI" hidden><input hidden name="HP"> <input hidden name="HO"><input 
hidden name="HB"><input hidden name="HC"> <input name="H0" hidden> <input 
name="H1" hidden> <input name="H2" hidden> <input name="H3" hidden> <span 
class="sip" hidden></span><hr><hr><button type="button" onclick="B()">Back
</button><br><button type="submit" class="bgrn">Save</button></form></div>
</body></html>)=====";


// Autogenerated from wled00/data/settings_time.htm, do not edit!!
const char PAGE_settings_time[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta name="viewport" content="width=500"><meta 
charset="utf-8"><title>Time Settings</title><script>
var d=document;function H(){window.open("https://github.com/atuline/WLED/wiki/Settings#time-settings")}function B(){window.open("/settings","_self")}function S(){BTa(),GetV(),Cs(),FC()}function gId(t){return d.getElementById(t)}function Cs(){gId("cac").style.display="none",gId("coc").style.display="block",gId("ccc").style.display="none",gId("ca").selected&&(gId("cac").style.display="block"),gId("cc").selected&&(gId("coc").style.display="none",gId("ccc").style.display="block"),gId("cn").selected&&(gId("coc").style.display="none")}function BTa(){var t="<tr><th>Active</th><th>Hour</th><th>Minute</th><th>Preset</th><th>M</th><th>T</th><th>W</th><th>T</th><th>F</th><th>S</th><th>S</th></tr>";for(i=0;i<8;i++)for(t+='<tr><td><input name="W'+i+'" id="W'+i+'" type="number" style="display:none"><input id="W'+i+'0" type="checkbox"></td><td><input name="H'+i+'" type="number" min="0" max="24"></td><td><input name="N'+i+'" type="number" min="0" max="59"></td><td><input name="T'+i+'" type="number" min="0" max="250"></td>',j=1;j<8;j++)t+='<td><input id="W'+i+j+'" type="checkbox"></td>';gId("TMT").innerHTML=t}function FC(){for(j=0;j<8;j++)for(i=0;i<8;i++)gId("W"+i+j).checked=gId("W"+i).value>>j&1}function Wd(){for(a=[0,0,0,0,0,0,0,0],i=0;i<8;i++){for(m=1,j=0;j<8;j++)a[i]+=gId("W"+i+j).checked*m,m*=2;gId("W"+i).value=a[i]}}function GetV() {
%CSS%%SCSS%</head><body onload="S()"><form
 id="form_s" name="Sf" method="post" onsubmit="Wd()"><div class="helpB"><button 
type="button" onclick="H()">?</button></div><button type="button" onclick="B()">
Back</button><button type="submit">Save</button><hr><h2>Time setup</h2>
Get time from NTP server: <input type="checkbox" name="NT"><br><input name="NS" 
maxlength="32"><br>Use 24h format: <input type="checkbox" name="CF"><br>
Time zone: <select name="TZ"><option value="0" selected="selected">GMT(UTC)
</option><option value="1">GMT/BST</option><option value="2">CET/CEST</option>
<option value="3">EET/EEST</option><option value="4">US-EST/EDT</option><option 
value="5">US-CST/CDT</option><option value="6">US-MST/MDT</option><option 
value="7">US-AZ</option><option value="8">US-PST/PDT</option><option value="9">
CST(AWST)</option><option value="10">JST(KST)</option><option value="11">
AEST/AEDT</option><option value="12">NZST/NZDT</option><option value="13">
North Korea</option><option value="14">IST (India)</option><option value="15">
CA-Saskatchewan</option><option value="16">ACST</option><option value="17">
ACST/ACDT</option><option value="18">HST (Hawaii)</option></select><br>
UTC offset: <input name="UO" type="number" min="-65500" max="65500" required>
 seconds (max. 18 hours)<br>Current local time is <span class="times">unknown
</span>.<h3>Clock</h3>Clock Overlay: <select name="OL" onchange="Cs()"><option 
value="0" id="cn" selected="selected">None</option><option value="1" id="ca">
Analog Clock</option><option value="2">Single Digit Clock</option><option 
value="3" id="cc">Cronixie Clock</option></select><br><div id="coc">First LED: 
<input name="O1" type="number" min="0" max="255" required> Last LED: <input 
name="O2" type="number" min="0" max="255" required><br><div id="cac">12h LED: 
<input name="OM" type="number" min="0" max="255" required><br>Show 5min marks: 
<input type="checkbox" name="O5"><br></div>Seconds (as trail): <input 
type="checkbox" name="OS"><br></div><div id="ccc">Cronixie Display: <input 
name="CX" maxlength="6"><br>Cronixie Backlight: <input type="checkbox" 
name="CB"><br></div>Countdown Mode: <input type="checkbox" name="CE"><br>
Countdown Goal:<br>Year: 20 <input name="CY" type="number" min="0" max="99" 
required> Month: <input name="CI" type="number" min="1" max="12" required> Day: 
<input name="CD" type="number" min="1" max="31" required><br>Hour: <input 
name="CH" type="number" min="0" max="23" required> Minute: <input name="CM" 
type="number" min="0" max="59" required> Second: <input name="CS" type="number" 
min="0" max="59" required><br><h3>Macro presets</h3><b>Macros have moved!</b>
<br><i>
Presets now also can be used as macros to save both JSON and HTTP API commands.
<br>Just enter the preset id below!</i> <i>
Use 0 for the default action instead of a preset</i><br>Alexa On/Off Preset: 
<input name="A0" type="number" min="0" max="250" required> <input name="A1" 
type="number" min="0" max="250" required><br>Button short press Preset: <input 
name="MP" type="number" min="0" max="250" required><br>Long Press: <input 
name="ML" type="number" min="0" max="250" required> Double press: <input 
name="MD" type="number" min="0" max="250" required><br>Countdown-Over Preset: 
<input name="MC" type="number" min="0" max="250" required><br>
Timed-Light-Over Presets: <input name="MN" type="number" min="0" max="250" 
required><br><h3>Time-controlled presets</h3><div style="display:inline-block">
<table id="TMT"></table></div><hr><button type="button" onclick="B()">Back
</button><button type="submit">Save</button></form></body></html>)=====";


// Autogenerated from wled00/data/settings_sec.htm, do not edit!!
const char PAGE_settings_sec[] PROGMEM = R"=====(<!DOCTYPE html><html><head><meta name="viewport" content="width=500"><meta 
charset="utf-8"><title>Misc Settings</title><script>
function B(){window.open("/settings","_self")}function U(){window.open("/update","_self")}function GetV() {var d=document;
%CSS%%SCSS%</head><body onload="GetV()">
<div style="text-align:left;display:inline-block;color:#eaeaea;min-width:340px">
<form id="form_s" name="Sf" method="post"><button type="button" onclick="B()">
Back</button><br><button class="bred" type="submit">RESET</button><hr><hr><h1 
style="text-align:center;color:#d43535">Factory Reset</h1><b><div 
style="width:220px;display:inline-block">Reset Now:</div><input type="checkbox" 
name="RS"></b><br>Select Checkbox and hit Reset Button<br><br><hr><h1 
style="text-align:center;color:#47c266">Manual Update</h1><button class="bgrn" 
type="button" onclick="U()">Manual OTA Update</button><br><br><span class="sip" 
hidden></span><hr><hr><button type="button" onclick="B()">Back</button><br>
<button class="bred" type="submit">RESET</button></form></div></body></html>)=====";

